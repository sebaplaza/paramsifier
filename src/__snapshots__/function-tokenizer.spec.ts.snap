// Vitest Snapshot v1

exports[`tokenizer > can skip function calls 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "funcCalls",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "first",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "other",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > can skip interpolated strings 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "intstring1",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "p1",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p2",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > can skip interpolated strings 2`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "intstring2",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "deep",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "asFuck",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > can skip object literals 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "obj",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "p1",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p2",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p3",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > can skip strings with escape seqs in them 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "rofl",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "p1",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p2",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p3",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > can tokenize arrow functions 1`] = `
[
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "first",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "other",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "=",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > does not require function name 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "first",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "second",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > includes equals token but skips value correctly 1`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "rofl",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "p1",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p2",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p3",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;

exports[`tokenizer > includes equals token but skips value correctly 2`] = `
[
  {
    "type": "function",
  },
  {
    "type": "ident",
    "value": "rofl",
  },
  {
    "type": "(",
  },
  {
    "type": "ident",
    "value": "p1",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p2",
  },
  {
    "type": "=",
  },
  {
    "type": ",",
  },
  {
    "type": "ident",
    "value": "p3",
  },
  {
    "type": "=",
  },
  {
    "type": ")",
  },
  {
    "type": "EOF",
  },
]
`;
